# Configurations for this project

# Classes of the actions
classes: ['arms', 'legs', 'foldedLegs', 'coreStability']

image_filename_format: "{:05d}.jpg"
skeleton_filename_format: "{:05d}.txt"

features:
  window_size: 5 # Number of adjacent frames for extracting features. 

s1_get_skeletons_from_training_testing_imgs.py:
  openpose:
    model: cmu # cmu or mobilenet_thin. "cmu" is more accurate but slower.
    img_size: 656x368 #  656x368, or 432x368, 336x288. Bigger is more accurate.
  input:
    train_images_description_txt: data/training_set/valid_images.txt
    test_images_description_txt: data/test_set/valid_images.txt
    images_train_folder: &train_set_folder data/training_set/
    images_test_folder: &test_set_folder data/test_set/
  output:
    train_folder: data_proc/raw_skeletons/training_set
    test_folder: data_proc/raw_skeletons/test_set
    train_images_info_txt: data_proc/raw_skeletons/training_set/images_info.txt
    test_images_info_txt: data_proc/raw_skeletons/test_set/images_info.txt
    detected_skeletons_train_folder: &skels_train_folder data_proc/raw_skeletons/training_set/skeleton_res/
    detected_skeletons_test_folder: &skels_test_folder data_proc/raw_skeletons/test_set/skeleton_res/
    viz_imgs_train_folder: data_proc/raw_skeletons/training_set/image_viz/
    viz_imgs_test_folder: data_proc/raw_skeletons/test_set/image_viz/

s2_put_skeletons_txts_into_train_test_csv.py:
  input: 
    detected_skeletons_train_folder: *skels_train_folder
    detected_skeletons_test_folder: *skels_test_folder
  output:
    training_set: &training_set data_proc/train_set.csv
    test_set: &test_set data_proc/test_set.csv
